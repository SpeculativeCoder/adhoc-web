#
# Copyright (c) 2022-2025 SpeculativeCoder (https://github.com/SpeculativeCoder)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

logging.level.root=trace

## Spring
logging.level.org.springframework.boot=info
logging.level.org.springframework.ui=info
logging.level.org.springframework.core.env.PropertySourcesPropertyResolver=info
logging.level.org.springframework.core.io.support.SpringFactoriesLoader=info
logging.level.org.springframework.core.io.support.PathMatchingResourcePatternResolver=info
logging.level.org.springframework.beans=info
logging.level.org.springframework.context=info
logging.level.org.springframework.aop=info
logging.level.org.springframework.jdbc=info
# set to debug to see use of JDBC (can be used by Spring Session)
logging.level.org.springframework.jdbc.core.JdbcTemplate=info
logging.level.org.springframework.orm=info
logging.level.org.springframework.data=info
logging.level.org.springframework.transaction=info
logging.level._org.springframework.web=info
logging.level.org.springframework.web=info
# set to debug to see STOMP activity
logging.level.org.springframework.web.SimpLogging=info
# set to debug to get endpoint invocations and return values
logging.level.org.springframework.web.servlet.DispatcherServlet=info
# set to info if regular web socket stats should be logged
logging.level.org.springframework.web.socket.config.WebSocketMessageBrokerStats=warn
logging.level.org.springframework.security=info
# set to debug to see CSRF issues
logging.level.org.springframework.security.web.csrf.CsrfFilter=info
# set to debug to see access denied e.g. as a result of CSRF issue
logging.level.org.springframework.security.web.access.AccessDeniedHandlerImpl=info
logging.level.org.springframework.session=info
logging.level.org.springframework.messaging=info
logging.level.org.springframework.jms=info
logging.level.org.springframework.scheduling=info
logging.level.org.springframework.retry=info
logging.level.org.springframework.jmx=info
logging.level.org.springframework.util.PlaceholderParser=info

## Thymeleaf
logging.level.org.thymeleaf=info

## Apache Tomcat
logging.level.org.apache.catalina=info
logging.level.org.apache.coyote=info
# set to info to see invalid request logging
logging.level.org.apache.coyote.http11.Http11InputBuffer=warn
# set to info to see invalid request logging
logging.level.org.apache.coyote.http11.Http11Processor=warn
logging.level.org.apache.tomcat=info
# set to info to see invalid request logging
logging.level.org.apache.tomcat.util.http.parser.Cookie=warn

## Liquibase
logging.level.org.liquibase=info
logging.level.liquibase=info

## Hibernate
logging.level.org.hibernate=info
# set to debug for SQL logging
logging.level.org.hibernate.SQL=info
# set to trace for SQL parameter logging
logging.level.org.hibernate.orm.jdbc.bind=info

## Hikari
logging.level.com.zaxxer.hikari=info

## Postgres
logging.level.org.postgresql=info

## Quartz
logging.level.org.quartz=info

## Artemis
logging.level.org.apache.activemq.artemis=info
# set to info to log messages
logging.level.org.apache.activemq.audit=warn

## Docker
logging.level.com.github.dockerjava=info

## AWS SDK
logging.level.software.amazon.awssdk=info
# set to debug for request/response logging
logging.level.software.amazon.awssdk.request=info

## Apache HTTP Client (used by AWS SDK)
# set to debug for more
logging.level.org.apache.http=info

## Netty (used by Spring Messaging and Artemis)
logging.level.io.netty=info
# set to debug to see netty connections to/from spring and artemis
logging.level.reactor.netty=info

# Apache BeanUtils (used by Artemis)
logging.level.org.apache.commons.beanutils=info

## Misc
logging.level.org.aspectj.weaver=info
logging.level.org.jboss.logging=info
logging.level.io.micrometer.common.util.internal.logging.InternalLoggerFactory=info

## JDK
logging.level.sun.rmi=info
logging.level.com.sun.jna=info
logging.level.java.io.serialization=info
logging.level.jdk.event.security=info
logging.level.javax.management=info
logging.level.java.lang.ProcessBuilder=info
logging.level.java.lang.Runtime=info

## Adhoc
logging.level.adhoc.server=info
logging.level.adhoc.task=info
logging.level.adhoc.hosting=info
logging.level.adhoc.dns=info
logging.level.adhoc.user=info
logging.level.adhoc.faction=info
logging.level.adhoc.objective=info
logging.level.adhoc.pawn=info
logging.level.adhoc.emission=info
logging.level.adhoc.quartz=info
# TODO
logging.level.adhoc.system.quartz.ManagerQuartzJob=info
# TODO
logging.level.adhoc.system.quartz.ManagerExtraQuartzJob=info
# set to debug for logging retries e.g. for optimistic locking retries
logging.level.adhoc.system.logging.LoggingRetryListener=debug
# set to debug to see errors when CSRF token is missing on requests
logging.level.adhoc.system.AdhocAccessDeniedHandler=info
# set to debug to also log resource not found (404s)
logging.level.adhoc.system.AdhocResponseEntityExceptionHandler=info

## Request Logging
# set to the following for different request logging levels...
# info = only logs requests which look like 5xx sort of errors
# debug = include all non-GET requests (i.e. POST/PUT/PATCH/DELETE etc.)
# trace = include all requests (this will be massively spammy!)
logging.level.REQUEST_LOG.USER=info
# same as above but for requests from the servers
logging.level.REQUEST_LOG.SERVER=info

## Testing
logging.level.org.springframework.test=info
logging.level.org.openqa.selenium.os=info
logging.level.org.openqa.selenium.manager=debug
logging.level.org.openqa.selenium.devtools=info
logging.level.org.openqa.selenium.remote.jdk=info
logging.level.org.openqa.selenium.remote.http=info

#logging.level.web=debug
#logging.level.sql=debug

#debug=true
