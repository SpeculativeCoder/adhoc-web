#
# Copyright (c) 2022-2023 SpeculativeCoder (https://github.com/SpeculativeCoder)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# NOTE: local.env can be used when running locally to override properties for your local environment - it won't be in the final docker image
spring.config.import=application-logging.properties,optional:adhoc.env[.properties],optional:file:./customization/local.env[.properties]

# colors in log messages where possible
spring.output.ansi.enabled=detect

# SSL can be enabled if the appropriate certs are present
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.certificate=${SSL_CERTIFICATE:certs/adhoc.cer}
server.ssl.certificate-private-key=${SSL_CERTIFICATE_PRIVATE_KEY:certs/adhoc.key}
server.ssl.trust-certificate=${SSL_TRUST_CERTIFICATE:certs/adhoc-ca.cer}

#server.servlet.session.timeout=5m
spring.web.resources.cache.period=600
spring.web.resources.cache.cachecontrol.max-age=600
#spring.jackson.serialization.write-dates-as-timestamps=false
#spring.resources.static-locations=classpath:/adhoc-app,classpath:/HTML5
spring.jpa.open-in-view=false
spring.mvc.problemdetails.enabled=true

spring.liquibase.change-log=db/changelog/db.changelog-root.xml
spring.jpa.hibernate.ddl-auto=validate

spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED
# aggressively short transaction timeout?
spring.transaction.default-timeout=30

spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.isClustered=true

spring.artemis.embedded.cluster-password=${ARTEMIS_EMBEDDED_CLUSTER_PASSWORD}
spring.artemis.mode=embedded
#spring.artemis.embedded.topics=events
#spring.artemis.embedded.queues=

adhoc.feature-flags=${FEATURE_FLAGS:development}

adhoc.message-broker-host=${MESSAGE_BROKER_HOST:localhost}

adhoc.manager-message-broker-host=${MANAGER_HOST:localhost}
adhoc.manager-message-broker-core-port=${MANAGER_MESSAGE_BROKER_CORE_PORT:616}

adhoc.kiosk-message-broker-host=${KIOSK_HOST:localhost}
adhoc.kiosk-message-broker-core-port=${KIOSK_MESSAGE_BROKER_CORE_PORT:626}

adhoc.manager-host=${MANAGER_HOST:localhost}
adhoc.kiosk-host=${KIOSK_HOST:localhost}

adhoc.domain=${ADHOC_DOMAIN:localhost}

adhoc.unreal-project-name=${UNREAL_PROJECT_NAME:MyProject}
